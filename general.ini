# This is a config file with the settings for a specific orthophoto 
# segmentation.

[general]

# The subject that will be segmented -> must be specified in a specific ini file!!!
segment_subject = greenhouses

# Predefine a list of possible wms server layers we can use
BEFL_aerial_winter_2018_rgb_wms_server_url = http://geoservices.informatievlaanderen.be/raadpleegdiensten/ofw/wms?
BEFL_aerial_winter_2018_rgb_wms_layername = ofw
BEFL_aerial_winter_2018_rgb_dir_name = BEFL_aerial_winter_2018_rgb
BEFL_aerial_summer_2015_rgb_wms_server_url = http://geoservices.informatievlaanderen.be/raadpleegdiensten/OMZ/wms?
BEFL_aerial_summer_2015_rgb_wms_layername = OMZRGB15VL
BEFL_aerial_summer_2015_rgb_dir_name = BEFL_aerial_summer_2015_rgb

# Default WMS server/layername to get the image data
wms_server_url = ${BEFL_aerial_winter_2018_rgb_wms_server_url}
wms_layername = ${BEFL_aerial_winter_2018_rgb_wms_layername}
layer_dir_name = ${BEFL_aerial_winter_2018_rgb_dir_name}
projection = epsg:31370

[train]

# The batch size to use. Depends on available hardware and model used.
batch_size_fit = 8
batch_size_predict = 20

max_epoch = 1000

# Info about the images used to train on
image_pixel_width = 512
image_pixel_height = 512
image_pixel_x_size = 0.25
image_pixel_y_size = 0.25

[predict]

# The batch size to use. Depends on available hardware and model used.
batch_size = 12

# Info about the source images that need to be predicted
image_pixel_width = 1024
image_pixel_height = 1024
image_pixel_x_size = 0.25
image_pixel_y_size = 0.25
image_pixels_overlap = 128

[model]

# The segmentation architecture to use for the subject
encoder = inceptionresnetv2
decoder = unet
architecture = ${encoder}+${decoder}

[dirs]

# The base dir where the info for all segmentation projects is stored
base_dir = X:\Monitoring\OrthoSeg

# The project directory for this subject
project_dir = ${base_dir}\${general:segment_subject}

# Training dirs
input_labels_dir = ${project_dir}\input_labels

training_dir = ${project_dir}\training
training_train_basedir = ${training_dir}\train
training_validation_basedir = ${training_dir}\validation
training_test_basedir = ${training_dir}\test
image_subdir = image
mask_subdir = mask

# Log dirs
log_dir = ${project_dir}\log
log_training_dir = ${training_dir}\log

# Model dir
model_dir = ${project_dir}\models

# Dir with the images we want predictions for
base_image_dir = ${base_dir}\_input_images\${general:layer_dir_name}
predict_image_dir = ${base_image_dir}\${predict:image_pixel_width}x${predict:image_pixel_height}_${predict:image_pixels_overlap}pxOverlap
predictsample_image_dir = ${base_image_dir}_testsample\${image_subdir}

[files]

# Path to a file containing the region of interest where you want to apply the 
# segementation
roi_filepath = X:\GIS\GIS DATA\Gewesten\2005\Vlaanderen+Brussel\gew_VLenBR.shp

# File path that will be used to save/load the keras model definition
model_json_filepath = ${dirs:model_dir}\${model:architecture}.json

# File paths where the train, validation and test labels will be found
input_trainlabels_filepath = ${dirs:input_labels_dir}\${general:segment_subject}_trainlabels.shp
input_validationlabels_filepath = ${dirs:input_labels_dir}\${general:segment_subject}_validationlabels.shp
input_testlabels_filepath = ${dirs:input_labels_dir}\${general:segment_subject}_testlabels.shp
